{"version":3,"sources":["redux/blockchain/blockchainReducer.js","redux/data/dataReducer.js","redux/store.js","redux/data/dataActions.js","redux/blockchain/blockchainActions.js","styles/globalStyles.js","assets/images/1.png","App.js","reportWebVitals.js","index.js"],"names":["initialState","loading","account","smartContract","web3","errorMsg","blockchainReducer","state","action","type","payload","weth","name","totalSupply","cost","error","dataReducer","rootReducer","combineReducers","blockchain","data","middleware","thunk","composeEnhancers","compose","applyMiddleware","store","createStore","fetchDataFailed","fetchData","dispatch","a","getState","methods","call","console","log","connectFailed","updateAccount","Screen","styled","div","image","SpacerXSmall","SpacerSmall","SpacerMedium","SpacerLarge","Container","flex","fd","jc","ai","test","TextTitle","p","TextDescription","StyledButton","button","ResponsiveWrapper","StyledImg","img","App","useDispatch","useSelector","useState","feedback","setFeedback","claimingNft","setClaimingNft","getData","useEffect","style","backgroundColor","padding","textAlign","fontSize","fontWeight","alt","src","i1","Number","target","href","onClick","e","preventDefault","window","ethereum","metamaskIsInstalled","isMetaMask","request","method","Web3EthContract","setProvider","Web3","accounts","require","abi","SmartContractObj","on","location","reload","disabled","_amount","mint","send","gasLimit","to","from","value","utils","toWei","toString","once","err","then","receipt","width","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a7f83e01.chunk.js","sourcesContent":["const initialState = {\n  loading: false,\n  account: null,\n  smartContract: null,\n  web3: null,\n  errorMsg: \"\",\n};\n\nconst blockchainReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case \"CONNECTION_REQUEST\":\n      return {\n        ...initialState,\n        loading: true,\n      };\n    case \"CONNECTION_SUCCESS\":\n      return {\n        ...state,\n        loading: false,\n          account: action.payload.account,\n          smartContract: action.payload.smartContract,\n          weth: action.payload.weth,\n          web3: action.payload.web3,\n      };\n    case \"CONNECTION_FAILED\":\n      return {\n        ...initialState,\n        loading: false,\n          errorMsg: action.payload,\n      };\n    case \"UPDATE_ACCOUNT\":\n      return {\n        ...state,\n        account: action.payload.account,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default blockchainReducer;","const initialState = {\n  loading: false,\n  name: \"\",\n  totalSupply: 0,\n  cost: 0,\n  error: false,\n  errorMsg: \"\",\n};\n\nconst dataReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case \"CHECK_DATA_REQUEST\":\n      return {\n        ...state,\n        loading: true,\n        error: false,\n        errorMsg: \"\",\n      };\n    case \"CHECK_DATA_SUCCESS\":\n      return {\n        ...state,\n        loading: false,\n        name: action.payload.name,\n        totalSupply: action.payload.totalSupply,\n        cost: action.payload.cost,\n        error: false,\n        errorMsg: \"\",\n      };\n    case \"CHECK_DATA_FAILED\":\n      return {\n        ...initialState,\n        loading: false,\n        error: true,\n        errorMsg: action.payload,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default dataReducer;\n","import { applyMiddleware, compose, createStore, combineReducers } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport blockchainReducer from \"./blockchain/blockchainReducer\";\nimport dataReducer from \"./data/dataReducer\";\n\nconst rootReducer = combineReducers({\n  blockchain: blockchainReducer,\n  data: dataReducer,\n});\n\nconst middleware = [thunk];\nconst composeEnhancers = compose(applyMiddleware(...middleware));\n\nconst configureStore = () => {\n  return createStore(rootReducer, composeEnhancers);\n};\n\nconst store = configureStore();\n\nexport default store;\n","// log\nimport store from \"../store\";\n\nconst fetchDataRequest = () => {\n  return {\n    type: \"CHECK_DATA_REQUEST\",\n  };\n};\n\nconst fetchDataSuccess = (payload) => {\n  return {\n    type: \"CHECK_DATA_SUCCESS\",\n    payload: payload,\n  };\n};\n\nconst fetchDataFailed = (payload) => {\n  return {\n    type: \"CHECK_DATA_FAILED\",\n    payload: payload,\n  };\n};\n\nexport const fetchData = (account) => {\n  return async (dispatch) => {\n    dispatch(fetchDataRequest());\n    try {\n      let name = await store\n        .getState()\n        .blockchain.smartContract.methods.name()\n        .call();\n      let totalSupply = await store\n        .getState()\n        .blockchain.smartContract.methods.totalSupply()\n        .call();\n      let cost = await store\n        .getState()\n        .blockchain.smartContract.methods.cost()\n        .call();\n\n      dispatch(\n        fetchDataSuccess({\n          name,\n          totalSupply,\n          cost,\n        })\n      );\n    } catch (err) {\n      console.log(err);\n      dispatch(fetchDataFailed(\"Could not load data from contract.\"));\n    }\n  };\n};\n","// constants\nimport Web3EthContract from \"web3-eth-contract\";\nimport Web3 from \"web3\";\nimport SmartContract from \"../../contracts/YRBTSRev.json\";\n\n// log\nimport {\n  fetchData\n} from \"../data/dataActions\";\n\nconst connectRequest = () => {\n  return {\n    type: \"CONNECTION_REQUEST\",\n  };\n};\n\nconst connectSuccess = (payload) => {\n  return {\n    type: \"CONNECTION_SUCCESS\",\n    payload: payload,\n  };\n};\n\nconst connectFailed = (payload) => {\n  return {\n    type: \"CONNECTION_FAILED\",\n    payload: payload,\n  };\n};\n\nconst updateAccountRequest = (payload) => {\n  return {\n    type: \"UPDATE_ACCOUNT\",\n    payload: payload,\n  };\n};\n\nexport const connect = () => {\n  return async (dispatch) => {\n    dispatch(connectRequest());\n    const {\n      ethereum\n    } = window;\n    const metamaskIsInstalled = ethereum && ethereum.isMetaMask;\n    await window.ethereum.request({\n      method: \"eth_requestAccounts\",\n    });\n    if (metamaskIsInstalled) {\n      Web3EthContract.setProvider(ethereum);\n      let web3 = new Web3(ethereum);\n      try {\n        const accounts = await ethereum.request({\n          method: \"eth_requestAccounts\",\n        });\n        const networkId = 5777; //1337; //await ethereum.request({ method: \"net_version\", });\n        // const NetworkData = await SmartContract.networks[networkId];\n        if (1 == 1) {\n          const {\n            abi\n          } = require('../../contracts/YRBTSRev.json');\n          const SmartContractObj = new Web3EthContract(\n            abi,\n            \"0xc5ba70371Db9E571673C93258b3528800Be76dED\"\n          );\n          dispatch(\n            connectSuccess({\n              account: accounts[0],\n              smartContract: SmartContractObj,\n              web3: web3,\n            })\n          );\n          // Add listeners start\n          ethereum.on(\"accountsChanged\", (accounts) => {\n            dispatch(updateAccount(accounts[0]));\n          });\n          ethereum.on(\"chainChanged\", () => {\n            window.location.reload();\n          });\n          // Add listeners end\n        } else {\n          dispatch(connectFailed(\"Change network to Ethereum\"));\n        }\n      } catch (err) {\n        console.log(err)\n        dispatch(connectFailed(\"Something went wrong\"));\n      }\n    } else {\n      dispatch(connectFailed(\"Install Metamask\"));\n    }\n  };\n};\n\nexport const updateAccount = (account) => {\n  return async (dispatch) => {\n    dispatch(updateAccountRequest({\n      account: account\n    }));\n    dispatch(fetchData(account));\n  };\n};\n","import styled from \"styled-components\";\n\n// Used for wrapping a page component\nexport const Screen = styled.div`\n  background-color: var(--black);\n  background-image: ${({ image }) => (image ? `url(${image})` : \"none\")};\n  background-size: cover;\n  background-position: center;\n  width: 100%;\n  min-height: 100vh;\n  display: flex;\n  flex-direction: column;\n`;\n\n// Used for providing space between components\nexport const SpacerXSmall = styled.div`\n  height: 8px;\n  width: 8px;\n`;\n\n// Used for providing space between components\nexport const SpacerSmall = styled.div`\n  height: 16px;\n  width: 16px;\n`;\n\n// Used for providing space between components\nexport const SpacerMedium = styled.div`\n  height: 24px;\n  width: 24px;\n`;\n\n// Used for providing space between components\nexport const SpacerLarge = styled.div`\n  height: 32px;\n  width: 32px;\n`;\n\n// Used for providing a wrapper around a component\nexport const Container = styled.div`\n  display: flex;\n  flex: ${({ flex }) => (flex ? flex : 0)};\n  flex-direction: ${({ fd }) => (fd ? fd : \"column\")};\n  justify-content: ${({ jc }) => (jc ? jc : \"flex-start\")};\n  align-items: ${({ ai }) => (ai ? ai : \"flex-start\")};\n  background-color: ${({ test }) => (test ? \"pink\" : \"none\")};\n  width: 100%;\n  background-image: ${({ image }) => (image ? `url(${image})` : \"none\")};\n  background-size: cover;\n  background-position: center;\n`;\n\nexport const TextTitle = styled.p`\n  color: var(--white);\n  font-size: 30px;\n  font-weight: 500;\n  line-height: 1.6;\n`;\n\nexport const TextSubTitle = styled.p`\n  color: var(--white);\n  font-size: 14px;\n  line-height: 1.6;\n`;\n\nexport const TextDescription = styled.p`\n  color: var(--white);\n  font-size: 18px;\n  line-height: 1.6;\n`;\n\nexport const StyledClickable = styled.div`\n  :active {\n    opacity: 0.6;\n  }\n`;\n","export default __webpack_public_path__ + \"static/media/1.75f03515.png\";","import React, { useEffect, useState, useRef } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { connect } from \"./redux/blockchain/blockchainActions\";\r\nimport { fetchData } from \"./redux/data/dataActions\";\r\nimport * as s from \"./styles/globalStyles\";\r\nimport styled from \"styled-components\";\r\nimport i1 from \"./assets/images/1.png\";\r\n\r\n\r\n\r\nexport const StyledButton = styled.button`\r\n  padding: 10px;\r\n  border-radius: 50px;\r\n  border: none;\r\n  background-color: #ffffff;\r\n  padding: 10px;\r\n  font-weight: bold;\r\n  color: #000000;\r\n  width: 300px;\r\n  cursor: pointer;\r\n  box-shadow: 2px 8px 4px -2px rgba(250, 250, 0, 0.5);\r\n  -webkit-box-shadow: 2px 3px 10px -2px rgba(250, 250, 0, 0.5);\r\n  -moz-box-shadow: 2px 8px 4px -2px rgba(250, 250, 0, 0.5);\r\n  :active {\r\n    box-shadow: none;\r\n    -webkit-box-shadow: none;\r\n    -moz-box-shadow: none;\r\n  }\r\n  :hover {\r\n    -webkit-box-shadow: 2px 3px 40px -2px rgba(250, 250, 0, 0.9);\r\n  }\r\n`;\r\n\r\nexport const ResponsiveWrapper = styled.div`\r\n  display: flex;\r\n  flex: 1;\r\n  flex-direction: column;\r\n  justify-content: stretched;\r\n  align-items: stretched;\r\n  width: 100%;\r\n  @media (min-width: 767px) {\r\n    flex-direction: column;\r\n  }\r\n`;\r\n\r\nexport const StyledImg = styled.img`\r\n  width: 200px;\r\n  height: 200px;\r\n  @media (min-width: 767px) {\r\n    width: 300px;\r\n    height: 300px;\r\n  }\r\n  transition: width 0.5s;\r\n  transition: height 0.5s;\r\n`;\r\n\r\nfunction App() {\r\n  const dispatch = useDispatch();\r\n  const blockchain = useSelector((state) => state.blockchain);\r\n  const data = useSelector((state) => state.data);\r\n  const [feedback, setFeedback] = useState(\"Which robot will answer to your call?\");\r\n  const [claimingNft, setClaimingNft] = useState(false);\r\n  const [mintQuantity, setMintQuantity] = useState(1)\r\n  const claimNFTs = (_amount) => {\r\n    if (_amount <= 0) {\r\n      return;\r\n    }\r\n    setFeedback(\"Preparing your NFT(s)...\");\r\n    setClaimingNft(true);\r\n    blockchain.smartContract.methods\r\n      .mint(blockchain.account, _amount)\r\n      .send({\r\n        gasLimit: \"1000000\",\r\n        to: \"0xc5ba70371Db9E571673C93258b3528800Be76dED\",\r\n        from: blockchain.account,\r\n        value: blockchain.web3.utils.toWei((.01 * _amount).toString(), \"ether\"),\r\n      })\r\n      .once(\"error\", (err) => {\r\n        console.log(err);\r\n        setFeedback(\"It seems the transaction was cancelled.\");\r\n        setClaimingNft(false);\r\n      })\r\n      .then((receipt) => {\r\n        setFeedback(\r\n          \"Woohoo! You just recieved your token(s)! Visit Opensea.io to view your randomly generated NFT!\"\r\n        );\r\n        setClaimingNft(false);\r\n        dispatch(fetchData(blockchain.account));\r\n      });\r\n  };\r\n\r\n  const getData = () => {\r\n    if (blockchain.account !== \"\" && blockchain.smartContract !== null) {\r\n      dispatch(fetchData(blockchain.account));\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    getData();\r\n  }, [blockchain.account]);\r\n\r\n  return (\r\n    <s.Screen style={{ backgroundColor: \"var(--black)\" }}>\r\n      <s.Container flex={1} ai={\"center\"} style={{ padding: 12 }}>\r\n        <s.TextTitle\r\n          style={{ textAlign: \"center\", fontSize: 36, fontWeight: \"bold\" }}\r\n        >\r\n          Robotrons\r\n\r\n        </s.TextTitle>\r\n        <s.SpacerMedium />\r\n        <ResponsiveWrapper flex={1} style={{ padding: 12 }}>\r\n          <s.Container flex={1} jc={\"center\"} ai={\"center\"}>\r\n            <StyledImg alt={\"example\"} src={i1} />\r\n            <s.SpacerMedium />\r\n            <s.TextTitle\r\n              style={{ textAlign: \"center\", fontSize: 26, fontWeight: \"bold\" }}\r\n            >\r\n              {data.totalSupply}/10000\r\n            </s.TextTitle>\r\n          </s.Container>\r\n          <s.SpacerMedium />\r\n          <s.Container\r\n            flex={1}\r\n            jc={\"center\"}\r\n            ai={\"center\"}\r\n            style={{ backgroundColor: \"#000000\", padding: 12 }}\r\n          >\r\n            {Number(data.totalSupply) == 10000 ? (\r\n              <>\r\n                <s.TextTitle style={{ textAlign: \"center\" }}>\r\n                  The sale has ended.\r\n                </s.TextTitle>\r\n                <s.SpacerSmall />\r\n                <s.TextDescription style={{ textAlign: \"center\" }}>\r\n                  Then you can trade NFTs on{\" \"}\r\n                  <a\r\n                    target={\"\"}\r\n                    href={\"https://opensea.io\"}\r\n                  >\r\n                    Opensea.io\r\n                  </a>\r\n                </s.TextDescription>\r\n              </>\r\n            ) : (\r\n              <>\r\n                <s.TextTitle style={{ textAlign: \"center\" }}>\r\n                  1 RBTRN NFT costs .01 Matic\r\n                </s.TextTitle>\r\n                <s.SpacerXSmall />\r\n                <s.TextDescription style={{ textAlign: \"center\" }}>\r\n                  -excluding gas fee-\r\n                </s.TextDescription>\r\n                <s.SpacerLarge />\r\n                <s.SpacerSmall />\r\n                <s.TextDescription style={{ textAlign: \"center\" }}>\r\n                  {feedback}\r\n                </s.TextDescription>\r\n                <s.SpacerMedium />\r\n                {blockchain.account === \"\" ||\r\n                  blockchain.smartContract === null ? (\r\n                  <s.Container ai={\"center\"} jc={\"center\"}>\r\n                    <s.TextDescription style={{ textAlign: \"center\" }}>\r\n\r\n                    </s.TextDescription>\r\n                    <s.SpacerSmall />\r\n                    <StyledButton\r\n                      onClick={(e) => {\r\n                        e.preventDefault();\r\n                        dispatch(connect());\r\n                        getData();\r\n                      }}\r\n                    >\r\n                      CONNECT WALLET\r\n                    </StyledButton>\r\n                    {blockchain.errorMsg !== \"\" ? (\r\n                      <>\r\n                        <s.SpacerSmall />\r\n                        <s.TextDescription style={{ textAlign: \"center\" }}>\r\n                          {blockchain.errorMsg}\r\n                        </s.TextDescription>\r\n                      </>\r\n                    ) : null}\r\n                  </s.Container>\r\n                ) : (\r\n                  <s.Container ai={\"center\"} jc={\"center\"} fd={\"row\"}>\r\n\r\n                    <StyledButton\r\n                      disabled={claimingNft ? 1 : 0}\r\n                      onClick={(e) => {\r\n                        e.preventDefault();\r\n                        claimNFTs(1);\r\n                        getData();\r\n                      }}\r\n                    >\r\n                      {claimingNft ? \"BUSY\" : `BUY  1`}\r\n                    </StyledButton>\r\n                    {/* <StyledButton\r\n                      disabled={claimingNft ? 1 : 0}\r\n                      onClick={(e) => {\r\n                        e.preventDefault();\r\n                        claimNFTs(3);\r\n                        getData();\r\n                      }}\r\n                    >\r\n                      {claimingNft ? \"BUSY\" : `BUY  3`}\r\n                    </StyledButton>\r\n                    <StyledButton\r\n                      disabled={claimingNft ? 1 : 0}\r\n                      onClick={(e) => {\r\n                        e.preventDefault();\r\n                        claimNFTs(5);\r\n                        getData();\r\n                      }}\r\n                    >\r\n                      {claimingNft ? \"BUSY\" : `BUY  5`}\r\n                    </StyledButton>\r\n                    <StyledButton\r\n                      disabled={claimingNft ? 1 : 0}\r\n                      onClick={(e) => {\r\n                        e.preventDefault();\r\n                        claimNFTs(10);\r\n                        getData();\r\n                      }}\r\n                    >\r\n                      {claimingNft ? \"BUSY\" : `BUY  10`}\r\n                    </StyledButton> */}\r\n                  </s.Container>\r\n                )}\r\n              </>\r\n            )}\r\n          </s.Container>\r\n        </ResponsiveWrapper>\r\n        <s.SpacerSmall />\r\n        <s.Container jc={\"center\"} ai={\"center\"} style={{ width: \"70%\" }}>\r\n          <s.TextDescription style={{ textAlign: \"center\", fontSize: 18 }}>\r\n            Part of all proceeds go towards Charity and adding Liquidity to TBC Token\r\n          </s.TextDescription>\r\n          <s.SpacerSmall />\r\n          <s.TextDescription style={{ textAlign: \"center\", fontSize: 14 }}>\r\n            Bee Rewarded to help Save the Bees #TBCToken<p />*.*.*Launching_Soon*.*.*\r\n          </s.TextDescription>\r\n        </s.Container>\r\n      </s.Container>\r\n    </s.Screen>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport store from \"./redux/store\";\nimport { Provider } from \"react-redux\";\nimport \"./styles/reset.css\";\nimport \"./styles/theme.css\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}